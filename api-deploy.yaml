apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deploy-$(deploymentName)
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apiservice-$(deploymentName)
  template:
    metadata:
      labels:
        app: apiservice-$(deploymentName)
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: NotIn
                values:
                - "sqlpool"
      containers:
      - name: apiservice-$(deploymentName)
        image: stewie12061/apiserevice:latest
        resources:
          requests:
            cpu: 250m
            memory: 500m
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: google-credentials
          mountPath: /var/secrets/google
        - mountPath: /app/Logs/
          name: api-log-$(deploymentName)
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/asoft-erp-firebase-adminsdk-7vzks-f1d0261521.json
        - name: DbConnectionStrings__ConnectionStrings__Business
          value: Server=mssql-clusterip-srv,1433;initial catalog=1BOSS_$(deploymentName);user id=sa;password=pa55w0rd!;Encrypt=false;TrustServerCertificate=True;Connection Timeout=30;
        - name: DbConnectionStrings__ConnectionStrings__Admin
          value: Server=mssql-clusterip-srv,1433;initial catalog=AS_ADMIN_1BOSS_$(deploymentName);user id=sa;password=pa55w0rd!;Encrypt=false;TrustServerCertificate=True;Connection Timeout=30;
      volumes:
      - name: google-credentials
        secret:
          secretName: google-credentials
      - name: api-log-$(deploymentName)
        persistentVolumeClaim:
          claimName: api-volume-claim-log-$(deploymentName)
---
apiVersion: v1
kind: Service
metadata:
  name: api-clusterip-srv-$(deploymentName)
spec:
  type: ClusterIP
  selector:
    app: apiservice-$(deploymentName)
  ports:
  - name: apiservice-$(deploymentName)
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: api-loadbalance-srv-$(deploymentName)
spec:
  type: LoadBalancer
  selector:
    app: apiservice-$(deploymentName)
  ports:
  - name: apiservice-$(deploymentName)
    protocol: TCP
    port: 80
    targetPort: 80
